# Kornilios Kourtis <kkourt@kkourt.io>
#
# vim: set expandtab softtabstop=4 tabstop=4 shiftwidth=4:

set -x
#set -e
args="$*"

usage() {
    echo "Usage: $0: <-k kernel_dir> <out_file>"
}

kdir="/lib/modules/$(uname -r)/build"
while getopts "hk::" option
do
    case $option in
        h) usage; exit 0;;
        k) kdir="${OPTARG}" ;;
        *) echo "Unknown option: $option"; usage; exit 1;;
    esac
done

# In case we want better...
arch="x86_64"
case $arch in
    x86_64) hdrfile="${kdir}/arch/x86/include/generated/uapi/asm/unistd_64.h";;
    *)      echo "Unknown arch: $arch"; exit 1;;
esac


shift $((OPTIND-1))
if [ -z "$1" ]; then
    usage
    exit 1
fi

rsfile=$1
cfile=$(dirname $0)/print_syscall_nums.c
pfile=$(dirname $0)/print_syscall_nums

gcc -Wall -include $hdrfile $cfile -o $pfile
if [ $? -ne 0 ]; then
    echo "Could not compile C program, probably due to old header files."
    echo "Use -k to specify a specific kernel dir."
    exit 1
fi

cat << EOF > $rsfile
// This file is automatically generated
//
// Command line: ${args}
// Date: $(date +%Y%m%d)
//
// Eventually, syscall numbers will make it to the libc crate, and then we can
// remove this.
EOF
./$pfile >> $rsfile
